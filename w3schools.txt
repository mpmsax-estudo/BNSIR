w3schools

CSS

	Key words
	background-
		background-repeat
		To repeat an image vertically, set background-repeat: repeat-y;
		To repeat an image horizontaly, set background-repeat: repeat-x;
		background-repeat: no-repeat;
		
		background-position
		background-position: right top;

		background-attachment
		The background-attachment property specifies whether the background image should scroll or be fixed (will not scroll with the rest of the page):

		CSS background - Shorthand property
			To shorten the code, it is also possible to specify all the background properties in one single property. This is called a shorthand property.
			The shorthand property for background is background.
			background: #ffffff url("img_tree.png") no-repeat right top;
			-When using the shorthand property the order of the property values is:
			    background-color
			    background-image
			    background-repeat
			    background-attachment
			    background-position

		All CSS Background Properties
			Property 				Description
			background 				Sets all the background properties in one declaration
			background-attachment 	Sets whether a background image is fixed or scrolls with the rest of the page
			background-clip 		Specifies the painting area of the background
			background-color 		Sets the background color of an element
			background-image 		Sets the background image for an element
			background-origin 		Specifies where the background image(s) is/are positioned
			background-position 	Sets the starting position of a background image
			background-repeat 		Sets how a background image will be repeated
			background-size 		Specifies the size of the background image(s)
			background-blend-mode: ?

	CSS Borders - Parei
	...

	The CSS Box Model

		All HTML elements can be considered as boxes. In CSS, the term "box model" is used when talking about design and layout.

		The CSS box model is essentially a box that wraps around every HTML element. It consists of: margins, borders, padding, and the actual content. The image below illustrates the box model:

	...
		
	Example div	
		This <div> element will have a total width of 350px: 
		div {
		  width: 320px;
		  padding: 10px;
		  border: 5px solid gray;
		  margin: 0;
		}

		Here is the calculation:
		320px (width)
		+ 20px (left + right padding)
		+ 10px (left + right border)
		+ 0px (left + right margin)
		= 350px

		The total width of an element should be calculated like this:

		Total element width = width + left padding + right padding + left border + right border + left margin + right margin

		The total height of an element should be calculated like this:

		Total element height = height + top padding + bottom padding + top border + bottom border + top margin + bottom margin

		outline?
		
	...

	Display

	...

		Block-level Elements

			A block-level element always starts on a new line and takes up the full width available (stretches out to the left and right as far as it can).
			The <div> element is a block-level element.

			Examples of block-level elements:

			    <div>
			    <h1> - <h6>
			    <p>
			    <form>
			    <header>
			    <footer>
			    <section>

		Inline Elements

			An inline element does not start on a new line and only takes up as much width as necessary.

			This is an inline <span> element inside a paragraph.

			Examples of inline elements:

			    <span>
			    <a>
			    <img>

		CSS Display/Visibility Properties
			Property 	Description
			display 	Specifies how an element should be displayed
			visibility 	Specifies whether or not an element should be visible

		Difference between display:none and visiblity: hidden

			visibility:hidden hides the element, but it still takes up space in the layout.

			display:none removes the element from the document. It does not take up any space.

	We can divide CSS selectors into five categories:

	    Simple selectors (select elements based on name, id, class)
	    Combinator selectors (select elements based on a specific relationship between them)
	    Pseudo-class selectors (select elements based on a certain state)
	    Pseudo-elements selectors (select and style a part of an element)
	    Attribute selectors (select elements based on an attribute or attribute value)
	p.className -> This classe is only declared for p tags inside the html.
	The CSS Universal Selector

	All CSS Simple Selectors
		Selector 			Example 		Example description
		.class 				.intro 			Selects all elements with class="intro"
		#id 				#firstname 		Selects the element with id="firstname"
		* 					* 				Selects all elements
		element 			p 				Selects all <p> elements
		element,element,.. 	div, p 			Selects all <div> elements and all <p> elements

	Multiple Style Sheets

		If some properties have been defined for the same selector (element) in different style sheets, the value from the last read style sheet will be used. 

	Color Especification
		CSS RGB Value

			In CSS, a color can be specified as an RGB value, using this formula:

			rgb(red, green, blue)

			Each parameter (red, green, and blue) defines the intensity of the color between 0 and 255.

			For example, rgb(255, 0, 0) is displayed as red, because red is set to its highest value (255) and the others are set to 0.

			To display the color black, all color parameters must be set to 0, like this: rgb(0, 0, 0).

			To display the color white, all color parameters must be set to 255, like this: rgb(255, 255, 255). 

			CSS HEX Value

			In CSS, a color can be specified using a hexadecimal value in the form:

			#rrggbb

			Where rr (red), gg (green) and bb (blue) are hexadecimal values between 00 and ff (same as decimal 0-255).

			For example, #ff0000 is displayed as red, because red is set to its highest value (ff) and the others are set to the lowest value (00).

	RGBA Value

		RGBA color values are an extension of RGB color values with an alpha channel - which specifies the opacity for a color.

		An RGBA color value is specified with:

		rgba(red, green, blue, alpha)

		The alpha parameter is a number between 0.0 (fully transparent) and 1.0 (not transparent at all):

	HSL Value

		In CSS, a color can be specified using hue, saturation, and lightness (HSL) in the form:
		hsl(hue, saturation, lightness)
		Explicacao:
			0-360		%			%
		hsl(hue, 	saturation, lightness)
			tom		saturacao	luminosidade

		Saturation can be described as the intensity of a color.

		Examples: hsl(147, 50%, 47%)
	 
		Hue is a degree on the color wheel from 0 to 360. 0 is red, 120 is green, and 240 is blue.

		Saturation is a percentage value, 0% means a shade of gray, and 100% is the full color.

		Lightness is also a percentage, 0% is black, 50% is neither light or dark, 100% is white

	HSLA Value

		HSLA color values are an extension of HSL color values with an alpha channel - which specifies the opacity for a color.

		An HSLA color value is specified with:

		hsla(hue, saturation, lightness, alpha)

		The alpha parameter is a number between 0.0 (fully transparent) and 1.0 (not transparent at all):


OBS: Procurar por -> Parei